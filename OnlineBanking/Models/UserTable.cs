//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnlineBanking.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class UserTable
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public UserTable()
        {
            this.AccountsTables = new HashSet<AccountsTable>();
        }

        [Key]
        public int UserID { get; set; }

        [DisplayName("First Name")]
        [Required(ErrorMessage = "First Name is a required field!")]
        [StringLength(50, ErrorMessage = "First Name cannot exceed 50 characters.")]
        public string FirstName { get; set; }

        [Required(ErrorMessage = "Last Name is a required field!")]
        [DisplayName("Last Name")]
        [StringLength(50, ErrorMessage = "Last Name cannot exceed 50 characters.")]
        public string LastName { get; set; }

        [Required(ErrorMessage = "DOB is a required field!")]
        [DisplayName("Date of Birth")]
        [DataType(DataType.Date, ErrorMessage = "Invalid date format.")]
        public DateTime DOB { get; set; }

        [Required(ErrorMessage = "Email is a required field!")]
        [RegularExpression("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$", ErrorMessage = "Invalid Email!")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Phone is a required field!")]
        [DisplayName("Phone Number")]
        [RegularExpression("^\\d{4}-\\d{7}$", ErrorMessage = "Phone number must follow the format 0340-2489108.")]
        public string Phone { get; set; }

        [Required(ErrorMessage = "City is a required field!")]
        [StringLength(50, ErrorMessage = "City name cannot exceed 50 characters.")]
        public string City { get; set; }

        [Required(ErrorMessage = "Password is a required field!")]
        [DataType(DataType.Password)]
        [StringLength(16, MinimumLength = 3, ErrorMessage = "Password must be between 4 and 16 characters.")]
        public string Password { get; set; }

        [DisplayName("Role")]
        [Required(ErrorMessage = "Role is a required field!")]
        public string Role { get; set; }

        [DisplayName("Gender")]
        [Required(ErrorMessage = "Gender is a required field!")]
        public string Gender { get; set; }

        [DisplayName("Marital Status")]
        [Required(ErrorMessage = "Marital Status is a required field!")]
        public string Marital_Status { get; set; }

        [DisplayName("CNIC")]
        [Required(ErrorMessage = "CNIC is a required field!")]
        [RegularExpression("^\\d{5}-\\d{7}-\\d{1}$", ErrorMessage = "CNIC must follow the format 00000-0000000-0.")]
        public string CNIC { get; set; }

        [DisplayName("Account Status")]
        [Required(ErrorMessage = "Account Status is a required field!")]
        public string AccountStatus { get; set; }

        //[Required(ErrorMessage = "Account Type is a required field!")]
        [DisplayName("Account Type")]
        public string AccountType { get; set; }

        [Required(ErrorMessage = "Balance is a required field!")]
        public decimal Balance { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AccountsTable> AccountsTables { get; set; }
    }
}
